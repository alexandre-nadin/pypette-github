# ----------------
# STAR alignment
# ----------------
# Align Parameters
# snakemake -p RULE/FILE --use-conda # --cluster 'qsub' --jobs 9999 --latency-wait 10
#snakemake -p run2/36258535_id/36258535_id_S10_L5_001.bam --cluster-config cluster.yaml  --cluster 'qsub -N {cluster.name} -l select={cluster.select}:ncpus={cluster.cores}:mem={cluster.mem}' --jobs 9999  --latency-wait 10
include: 'bam.sk'
STAR_VERSION = "STAR_2.5.3a"
STAR_RAM = "32gb"
STAR_CORES = 6
STAR_outFilterMismatchNmax = 10 
STAR_GENOME_INDEX = "" 

rule star__align_chunk_star:
    input:
        # samples_map = fastq_samples_map,
        fastq_reads= lambda wildcards: csvmap__format_str_from_query_dict(
                  csvmap=fastq_csvmap, 
                  str_format=chunk_fastq_format + ".fastq.gz",
                  **wildcards)
    output: 
        primary = chunk_bam_format + "{process}.bam",
        bam_file_raw = chunk_bam_format + "{process}.Aligned.sortedByCoord.out.bam",
        raw_files = [ chunk_bam_format + "{process}." + _raw for _raw in
             [ "Log.out", "Log.progress.out", "Log.final.out", "SJ.out.tab" ]
        ]
    wildcard_constraints:
         process="(\.star)"
    shell:"""
       condactivate #> {output[primary]}.out ## DRY_RUN
       STAR \
         --runThreadN {STAR_CORES} \
         --genomeDir {STAR_GENOME_INDEX} \
         --readFilesIn {input[fastq_reads]} \
         --outSAMstrandField intronMotif \
         --outFileNamePrefix {wildcards.sample_run}/{wildcards.sample_name}/{wildcards.sample_name}_{wildcards.sample_number}_{wildcards.sample_lane}_{wildcards.sample_chunknb}{wildcards.preprocesses}{wildcards.process}. \
         --outSAMtype BAM SortedByCoordinate \
         --outSAMunmapped Within \
         --outFilterMismatchNmax {STAR_outFilterMismatchNmax} \
         --readFilesCommand zcat \
        > {output[primary]}.out;  # DRY_RUN
       #touch {output} ## DRY_RUN 
       ln.rel -f {output[bam_file_raw]} {output[primary]}
     """

