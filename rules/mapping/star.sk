# ----------------
# STAR alignment
# ----------------
# Align Parameters
# snakemake -p RULE/FILE --use-conda # --cluster 'qsub' --jobs 9999 --latency-wait 10
#snakemake -p run2/36258535_id/36258535_id_S10_L5_001.bam --cluster-config cluster.yaml  --cluster 'qsub -N {cluster.name} -l select={cluster.select}:ncpus={cluster.cores}:mem={cluster.mem}' --jobs 9999  --latency-wait 10
STAR_VERSION = "STAR_2.5.3a"
STAR_RAM = "32gb"
STAR_CORES = 6
STAR_outFilterMismatchNmax = 10 
STAR_GENOME_INDEX = "" 

def cmap__fastq_reads(cmap, wildcards, out_prefix='', out_suffix=''):
    #
    # Gets all the fastq chunknames from a Snakemake rule's wildcards. 
    #
    wc_dict = dict(wildcards.items())
    return set([ str(
                   out_prefix
                 + _fastq_map[cmap.colindexes.sample_chunkname] 
                 + out_suffix
                ).format(**wc_dict)
              for _fastq_map in cmap.query(**wc_dict)
    ])

out_chunk_bam_pattern="{sample_run}/{sample_name}/{sample_name}_{sample_number}_{sample_lane}_{sample_chunknb}{process}"
rule align_chunk_star:
    input:
        # samples_map = fastq_samples_map,
        fastq_reads = lambda wildcards: cmap__fastq_reads(
						cmap, 
                    				wildcards, 
 						out_prefix="{sample_run}/{sample_name}/", 
						out_suffix="{process}.fastq.gz")
    output: 
        primary = out_chunk_bam_pattern + ".bam",
        bam_file_raw = out_chunk_bam_pattern + ".Aligned.sortedByCoord.out.bam",
        raw_files = [ out_chunk_bam_pattern + "." + _raw for _raw in
             [ "Log.out", "Log.progress.out", "Log.final.out", "SJ.out.tab" ]
        ]

    wildcard_constraints:
        sample_name=fh.FastqFile.fields_regex_dic['sample_name'],
        sample_number=fh.FastqFile.fields_regex_dic['sample_number'],
        sample_lane=fh.FastqFile.fields_regex_dic['sample_lane'],
        sample_chunknb=fh.FastqFile.fields_regex_dic['sample_chunknb'],
        process="(\.\w+)*"
    shell:"""
       condactivate #> {output[primary]}.out ## DRY_RUN
       STAR \
         --runThreadN {STAR_CORES} \
         --genomeDir {STAR_GENOME_INDEX} \
         --readFilesIn {input[fastq_reads]} \
         --outSAMstrandField intronMotif \
         --outFileNamePrefix {wildcards.sample_run}/{wildcards.sample_name}/{wildcards.sample_name}_{wildcards.sample_number}_{wildcards.sample_lane}_{wildcards.sample_chunknb}{wildcards.process}. \
         --outSAMtype BAM SortedByCoordinate \
         --outSAMunmapped Within \
         --outFilterMismatchNmax {STAR_outFilterMismatchNmax} \
         --readFilesCommand zcat \
        > {output[primary]}.out;  # DRY_RUN
       #touch {output} ## DRY_RUN 
       ln.rel -f {output[bam_file_raw]} {output[primary]}
     """

