multiqc__dir          = "multiqc"
multiqc__report       = "samples/all/" + bam__pipelineDir + "report.html"

rule multiqc__report:
  input:
    fastqcs  = lambda wildcards: fastq__mapStringSamples(
      fastq_qc__readZip, **wildcards),
    bamstats = lambda wildcards: fastq__mapStringSamples(
      bam__mergedSampleStats, **wildcards)
  output:
    report   = multiqc__report
  run:
    dirs = [ os.path.dirname(d) for d in input ]
    cmd  = """
      multiqc              \
        -o {multiqc__dir}  \
        {input}            \
        -n {output.report}
    """
    exshell(input, output, cmd, 
      multiqc__dir=multiqc__dir,
      **wildcards)

bamStats = "samples/{sample_name}/runs/{sample_run}/fastq/{procFastqMerge}{procTrimming}mapped/STAR/{procBamMerged}{sample_name}.bamstats"
rule lsbams:
  output:
    "samples/{sample_name}/runs/{sample_run}/fastq/merged/mapped/STAR/merged/report.html"
  run:
    bams = fastq__mapStringSamples(
      "samples/{sample_name}/runs/{sample_run}/fastq/merged/mapped/STAR/merged/{sample_name}.bam", 
      interpreteAll=True,
      **wildcards
    )
    print(f"bams requested:\n{bams}")

    bamstats = fastq__mapStringSamples(
      bamStats,
      interpreteAll=True,
      **wildcards
    )
    print(f"bamstats requested:\n{bamstats}")
    touch(output)

ruleorder: lsbams > samples__all > samples__runs #> lsbams
