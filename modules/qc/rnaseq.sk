LANG = "LC_ALL=en_US.utf8 LANG=en_US.utf8"

rule qc_rnaseq__multiqc:
  input:
    fastqcs   = pipeman.input(
      fastq_qc__readZip, 
      derefKwargs=['sample_name',]),
    readDists = pipeman.input(
      f"{bam__sampleTarget}.read_distribution",
      derefKwargs=['sample_name',]),
    inferExp  = pipeman.input(
      f"{bam__sampleTarget}.inferExperiment",
      derefKwargs=['sample_name',]),
    bamCounts = pipeman.input(
      f"{bam__pipeTarget}featureCounts/{{sample_name}}.counts.summary",
      derefKwargs=['sample_name',]),
    bamstat   = pipeman.input(
      f"{bam__sampleTarget}.bamstats",
      derefKwargs=['sample_name',]),
    starLogs  = pipeman.input(
      f"{bam_mapper__pipeTarget}/{{sample_name}}.Log.final.out",
      derefKwargs=['sample_name',]),
  output:
    report   =           f"{bam__pipeTarget}multiqc_report.html",
    data     = directory(f"{bam__pipeTarget}multiqc_data")
  run:
    outDir = bam__pipeTarget.format(**wildcards)
    cmd  = f"""
      {LANG} multiqc       \
        -f                 \
        -o {outDir}        \
        {input} 
    """
    exshell(**vars())

ruleorder: qc_rnaseq__multiqc > samples__all > samples__runs
