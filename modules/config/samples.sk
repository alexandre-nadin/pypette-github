samples__dir       = "samples/{sample_name}"
samples__files     = "samples/samples.txt"
samples__csvMap    = pypette.samples.configManager.configfileBase + "{extension}"
samples__csvMapDft = pypette.samples.configManager.configFileDefault

pypette.includeModules(
  "fastq/fastq.py",
  "config/runs.py")

# --------------
# Samplesheets
# --------------
samples__sampleTargetDir     = "samples/all/runs/{sample_run}"
samples__ssheetTarget        = f"{samples__sampleTargetDir}/samplesheet.csv"
samples__seqrunFilesTarget   = f"{samples__sampleTargetDir}/samples.txt"
samples__seqrunCsvMapTarget  = f"{samples__sampleTargetDir}/samples.csv"
samples__seqrunsCsvMapTarget = f"{samples__sampleTargetDir}/samples.csv".format(sample_run="all")

rule samples__seqrunSamplesheet:
  input:
    confs   = config__files,
    project = project__config,
    ssheet  = lambda x: runs__samplesheet("{sample_run}")
  output:
    ssheet = samples__ssheetTarget
  run:
    cmd = f"""
      source illumina.samplesheet.lib
      cat {input.ssheet}                             \
       | ssheet__projectFiltered "{pypette.project}" \
       | ssheet__data                                \
       > {output.ssheet}
    """
    exshell(**vars())

rule samples__seqrunFiles:
  """
  Takes a seqrun samplesheet and finds each fastq from the seqrun folder. 
  Seqrun folder is deduced from the cluster configuration file.
  """
  input:
    ssheet = samples__ssheetTarget
  output: 
    file   = samples__seqrunFilesTarget
  run:
    sampleNames = pypette.samples.dataSampleSheet(input.ssheet).sample_name
    cmdRegex = (
        ".*\("
      + "\|".join(sampleNames)
      + "\).*\.fastq\.gz")
    runPath = runs__prjPath(wildcards.sample_run)
  
    cmd     = f"""
      find -L {runPath} -maxdepth 2 -regex '{cmdRegex}' > {output.file}
    """
    exshell(**vars())

rule samples__seqrunMap:
  """
  Creates a map of each sample's name's fields from given sample filenames.
  """
  input:
    file = samples__seqrunFilesTarget
  output:
    map   = samples__seqrunCsvMapTarget
  run:
    """ File Output Header """
    sampleLines = [ FastqFile.fieldNames() ]
    with open(input.file, 'r') as fqFiles:
      """ Mapped Samples Lines """
      sampleLines.extend(fastq__mapFilenames(fqFiles, wildcards.sample_run))

    """ Write Output """
    with open(output.map, 'a') as fmap:
      fmap.write(
        pypette.samples.listsToSamplesheet(
          sampleLines, 
          ',') + os.linesep)
    cmd = ""
    exshell(force=True, **vars())

rule samples__seqrunsMap:
  """
  Concatenates each seqrun's samples map
  """
  input:
    maps = lambda x: expand(samples__seqrunCsvMapTarget, sample_run=pypette.config.project.runIds)
  output:
    map   = samples__seqrunsCsvMapTarget
  run:
    cmd = f"""
      head -n 1 -q {input.maps[0]} > {output.map}
      tail -n +2 -q {input.maps} >> {output.map}
    """
    exshell(**vars())

rule samples__mapAll:
  """   
  Links the samplemap for all the runs.
  """
  input: 
    map = samples__seqrunsCsvMapTarget
  output: 
    map = "samples/samples.csv"
  run:
    cmd = f"""
      ln {input.map} {output.map} 
    """
    exshell(force=True, **vars())


localrules: samples__seqrunSamplesheet, samples__seqrunFiles, samples__seqrunMap, samples__seqrunsMap, samples__mapAll
