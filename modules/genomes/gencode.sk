pipeman.includeModule("genomes/genome.sk")
include: "gencode.py"

rule gencode__gtf:
  """
  Downloads the required GTF file.
  """
  output:
    gtf = gencode__gtf()
  run:
    gtfUrl = gencode__gtfUrl()
    cmd = """
      curl "{gtfUrl}" \
        -o {output.gtf}
    """
    exshell(**vars())

rule gencode__bed:
  """
  Converts the required GTF into a bed file.
  """
  input:
    gtf = "{someprefix}.gtf.gz"
  output:
    bed = temp("{someprefix}.bed")
  run:
    cmd = """
      gunzip -c {input.gtf}                     \
       | awk '{{ 
           if ($0 ~ "transcript_id") 
             print $0; 
           else 
             print $0" transcript_id \\"\\";"; 
         }}'                                    \
       | gtf2bed                                \
      > {output.bed}
    """
    exshell(**vars())

# ------
# UCSC
# ------
rule gencode__ucscGenePred:
  """
  Gets the required genePred file.
  """
  output: 
    genePred    = gencode__ucscGenePred()
  run:
    annotUrl    = gencode__ucscAnnotUrl
    cmd = f"""
      curl "{gencode__ucscAnnotUrl()}"  \
       | gunzip                         \
       | cut -f2-11                     \ 
       | genePredToBed stdin stdout     \
       | gzip                           \
       > {output.genePred}
    """
    exshell(**vars())
  
rule gencode__ucscBed:
  """
  Gets the required bed file.
  """
  input:
    bed = "{someprefix}.genePred"
  output:
    bed = temp("{someprefix}.bed.gz")
  run:
    cmd = """
      gunzip -c {input.gtf}                     \
       | awk '{{ 
           if ($0 ~ "transcript_id") 
             print $0; 
           else 
             print $0" transcript_id \\"\\";"; 
         }}'                                    \
       | gtf2bed                                \
      > {output.bed}
    """
    exshell(**vars())
