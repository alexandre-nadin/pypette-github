pipeman.includeModule("genomes/genome.sk")
include: "annotation.py"

rule annot__ebiGtf:
  """
  Downloads the required GTF file.
  """
  output:
    gtf = annot__ebiGtfGz()
  run:
    shared = annot__ebiGtfGz(sharedDir=True, withFile=True)
    if shared:
      cmd = f"""
        ln -s {shared} {output.gtf}
      """
    else:
      cmd = f"""
        curl "{annot__ebiGtfUrl()}" \
          -o {output.gtf}
      """
    exshell(**vars())

rule annot__gtfToBed:
  """
  Converts the required GTF into a bed file.
  """
  input:
    gtf = "{someprefix}.gtf.gz"
  output:
    bed = pipeman.temp("{someprefix}.bed")
  run:
    cmd = """
      gunzip -c {input.gtf}                     \
       | awk '{{
           if ($0 ~ "transcript_id")
             print $0;
           else
             print $0" transcript_id \\"\\";";
         }}'                                    \
       | gtf2bed                                \
      > {output.bed}
    """
    exshell(**vars())

rule annot__gtfToBiotypes:
  """
  Creates a gene-biotype dictionary from a GTF
  """
  input:
    gtf      = "{someprefix}.gtf.gz"
  output:
    biotypes = "{someprefix}.biotypes.tsv.gz"
  run:
    cmd = """
      gunzip -c {input.gtf}                       \
       | grep -v '#'                              \
       | awk '($3=="gene") {{print}}'             \
       | cut -f9                                  \
       | sed 's/;\s/\t/g'                         \
       | grep_columns gene_id gene_type gene_name \
       | sed -e 's/gene_[a-z]\+\s//g'             \
       | tr -d "\\""                              \
       | awk '{{OFS="\t"; print $3, $2}}'         \
       | gzip                                     \
       > {output.biotypes}
    """
    exshell(**vars())


# ------
# UCSC
# ------
rule annot__ucscAnnotTxt:
  """
  Gets the raw txt annotation file.
  """
  output:
    annot = annot__ucscTxt()
  run:
    shared = annot__ucscTxt(sharedDir=True, withFile=True)
    if shared:
      cmd = f"""
        ln -s {shared} {output.annot}
      """
    else:
      cmd = f"""
        curl "{annot__ebiTxtUrl()}" > {output.annot}
      """
    exshell(**vars())

rule annot__ucscAnnotGenePred:
  """
  Gets the required genePred file.
  """
  input:
    annot    = lambda x: annot__ucscTxt()
  output:
    genePred = annot__ucscGenePred()
  run:
    cmd = f"""
      gunzip -c {input.annot} \
       | cut -f2-11           \
       | gzip                 \
       > {output.genePred}
    """
    exshell(**vars())

rule annot__gtf:
  input:
    gz  = "{someprefix}.gtf.gz"
  output:
    gtf = pipeman.temp("{someprefix}.gtf")
  run:
    cmd = """
      gunzip -c {input.gz} > {output.gtf}
    """
    exshell(**vars())

rule annot__ucscAnnotGtfGz:
  """ Gets the required GTF file. """
  input:
    pred = lambda x: annot__ucscGenePred()
  output:
    gtf  = annot__ucscGtfGz()
  run:
    cmd = """
      genePredToGtf file {input.pred} stdout \
       | gzip                                \
       > {output.gtf}
    """
    exshell(**vars())

rule annot__ucscAnnotBedgz:
  """
  Gets the required bed file.
  """
  input:
    pred = lambda x: annot__ucscGenePred()
  output:
    bed  = annot__ucscBedgz()
  run:
    cmd = """
      genePredToBed {input.pred} stdout \
       | gzip                           \
       > {output.bed}
    """
    exshell(**vars())

rule annot__ucscBed:
  input:
    bed = lambda x: annot__ucscBedgz()
  output:
    bed = annot__ucscBed()
  run:
    cmd = """
      gunzip -c {input.bed} > {output.bed}
    """
    exshell(**vars())
