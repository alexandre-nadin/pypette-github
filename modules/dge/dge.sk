rule dge__plots:
  input: 
    metadata    = "samples/metadata.tsv",
    counts      = f"{counts_merged__sampleTarget}.counts.gz"
  output:
    distEstims  = f"{dge__plotSampleTarget}.distEstimsPlot.png",
    maPlot      = f"{dge__plotSampleTarget}.maPlot.pdf",
    volcanoPlot = f"{dge__plotSampleTarget}.volcanoPlot.pdf",
    contrasts   = directory(f"{dge__contrastTarget}")
  params:
    fCountsDataCols = counts__stdCols(),
    dge = lambda wildcards, input: dge__deseq2ParamsDft(input.metadata)
  script: 
    pypette.rscript("dge/plots.R")

rule dge__enrichR:
  input: 
    metadata    = "samples/metadata.tsv",
    counts      = f"{counts_merged__sampleTarget}.counts.gz"
  output:
    dir = directory(f"{dge__enrichTarget}")
  params:
    fCountsDataCols = counts__stdCols(),
    dge = lambda wildcards, input: dge__deseq2ParamsDft(input.metadata)
  script: 
    pypette.rscript("dge/enrichR.R")
