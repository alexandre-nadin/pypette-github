include: "dge.py"

pipeman.addTargets(
  dge__pipeTarget   = "{counts_merged__pipeTarget}/dge",
  dge__sampleTarget = "{dge__pipeTarget}/{{sample_name}}",

  dge__contrastTarget       = "{dge__pipeTarget}/contrasts",
  dge__contrastSampleTarget = "{dge__contrastTarget}/{{sample_name}}",

  dge__plotTarget           = "{dge__pipeTarget}/plots",
  dge__plotSampleTarget     = "{dge__plotTarget}/{{sample_name}}",

  dge__enrichTarget         = "{dge__pipeTarget}/enrichR",
  dge__enrichedSampleTarget = "{dge__enrichTarget}/{{sample_name}}"
)

rule dge__plots:
  input: 
    metadata    = "samples/metadata.tsv",
    counts      = f"{counts_merged__sampleTarget}.counts.gz"
  output:
    distEstims  = f"{dge__plotSampleTarget}.distEstimsPlot.png",
    maPlot      = f"{dge__plotSampleTarget}.maPlot.pdf",
    volcanoPlot = f"{dge__plotSampleTarget}.volcanoPlot.pdf",
    contrasts   = directory(f"{dge__contrastTarget}")
  params:
    fCountsDataCols = counts__stdCols(),
    dge = lambda wildcards, input: dge__deseq2ParamsDft(input.metadata)
  script: 
    pipeman.rscript("dge/plots.R")

rule dge__enrichR:
  input: 
    metadata    = "samples/metadata.tsv",
    counts      = f"{counts_merged__sampleTarget}.counts.gz"
  output:
    dir = directory(f"{dge__enrichTarget}")
  params:
    fCountsDataCols = counts__stdCols(),
    dge = lambda wildcards, input: dge__deseq2ParamsDft(input.metadata)
  script: 
    pipeman.rscript("dge/enrichR.R")
