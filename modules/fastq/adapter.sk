include: "adapter.py"

rule fastq_adapter__fasta_adapters:
  input: 
    fasta = lambda wildcards: fastq_adapter__toolAdapters(wildcards.trimmingTool)
  output: 
    "adapters/{trimmingTool}/adapters.fa"
  wildcard_constraints:
    trimmingTool = '|'.join(trimmingTools)
  run:
    cmd = """
      ## Substitute uracil in timin; Remove empty lines.
      perl -pe 'if(!m/^>/){{ tr/U/T/}}' {input.fasta} \
       | grep . > {output[0]}.tmp1

      reverse_fasta < {output[0]}.tmp1 \
       | perl -lpe 'if(m/^>/){{$_=$_."_reverse"}}' \
       > {output[0]}.tmp2

      cat {output[0]}.tmp1 {output[0]}.tmp2 \
       > {output[0]}

      rm {output[0]}.tmp1 {output[0]}.tmp2
    """
    exshell(input, output, cmd, **wildcards)

