include: "adapter.py"

rule fastq_adapter__fasta_adapters_forward:
  """
    Creates a fasta with all forward adapters for the trimming tool.
  """
  input: 
    fasta = lambda wildcards: fastq_adapter__toolAdapters(wildcards.trimmingTool)
  output:
    fasta = "adapters/{trimmingTool}/adapters-fwd.fa"
  wildcard_constraints:
    trimmingTool = '|'.join(trimmingTools)
  run:
    cmd = """
      ## Substitute uracil in timin; Remove empty lines.
      perl -pe 'if(!m/^>/){{ tr/U/T/}}' {input.fasta} \
       | grep . > {output.fasta}
    """
    exshell(**vars())

rule fastq_adapter__fasta_adapters_reversed:
  """ 
    Creates a fasta with all reverse adapters for the trimming tool.
  """
  input: 
    fasta = "adapters/{trimmingTool}/adapters-fwd.fa"
  output:
    fasta = "adapters/{trimmingTool}/adapters-rev.fa"
  wildcard_constraints:
    trimmingTool = '|'.join(trimmingTools)
  run:
    with open(output.fasta, 'w') as fh:
      fh.writelines([ 
        line + os.linesep
        for line in fastq_adapter__reverseComplementFasta(input.fasta)])

rule fastq_adapter__fasta_adapters_pairend:
  """ 
    Creates a fasta with pair-end (both forward and reverse) adapters for the trimming tool.
  """
  input:
    faFwd = "adapters/{trimmingTool}/adapters-fwd.fa",
    faRev = "adapters/{trimmingTool}/adapters-rev.fa"
  output:
    faPE  = "adapters/{trimmingTool}/adapters-pe.fa"
  run:
    cmd = """
      cat {input.faFwd} {input.faRev} \
       > {output.faPE}
    """
    exshell(**vars())
