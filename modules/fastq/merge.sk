pipeman.updateWildcardConstraints(
  procFastqMerge = "(merged/)",
)
fastq_merge__dir        = fastq__sampleRunDir
fastq_merge__readPrefix = fastq_merge__dir + "/{procFastqMerge}{sample_name}_{sample_read}"
fastq_merge__read       = fastq_merge__readPrefix + "{sample_extension}"

# ---------------
# Merging Reads
# ---------------
rule fastq_merging__mergeReads:
  """
  Merges sample reads filtered by the given wildcards.
  """
  input:
    reads = lambda wildcards:
      fastq__mapStringSamples(fastq__chunk, **wildcards)
  output:
    read  = temp(fastq_merge__read)
  run:
    if len(input.reads) == 1:
      cmd = """
        ln {input.reads[0]} {output.read}
      """
    else:
      cmd = """
        zcat {input.reads}   \
         | gzip              \
         > {output.read}
      """
    texshell(**vars())

ruleorder: samples__runs > fastq_merging__mergeReads
