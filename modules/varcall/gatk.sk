vcf__pipeTarget   = f"{bam__pipeTarget}varcall"
vcf__sampleTarget = f"{vcf__pipeTarget}/{{sample_name}}"

rule varcall__gatk:
  input:
    bam = pipeman.input(
             f"{bam__sampleTarget}.bam",
             derefKwargs = ['sample_name',]),
    ref_genome_fa = lambda x: genome__fasta()
  output:
    vcf = f"{vcf__sampleTarget}.ga.vcf.gz"
  run:
    annotation_dir = genome__annotationDir() + "_pypette"
    cmd = f"""
      gatk -Xmx64g \
        -T HaplotypeCaller \
        -R {input.ref_genome_fa} \
        -I {input.bam} \
        -o {output.vcf} \
        -ERC GVCF \
        --dbsnp {annotation_dir}/dbSNP-151.vcf.gz
    """
    exshell(**vars())

rule varcall__mergeGVCF:
  input:
    #all
    vcf = f"{vcf__sampleTarget}.ga.vcf.gz"
    ref_genome_fa = lambda x: genome__fasta()
  output:
    #merged
    vcf = f"{vcf__sampleTarget}.ga.vcf.gz"
  run:
    annotation_dir = genome__annotationDir() + "_pypette"
    cmd = f"""
      gatk -Xmx64g \
        -T GenotypeGVCFs \
        -R {input.ref_genome_fa} \
        -V input_gvcfs.list \
        -o {output.vcf} \
        --dbsnp {annotation_dir}/dbSNP-151.vcf.gz
    """
    exshell(**vars())
