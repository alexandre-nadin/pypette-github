include: "star.py"

rule bam_star__alignReads:
  input: 
    r1 = pipeman.input(fastq__read, sample_read="R1"),
    r2 = pipeman.input(fastq__read, sample_read="R2")
  output:
    bam      = pipeman.temp(bam__sample),
    tab      = pipeman.temp(f"{bam__mappingDir}/SJ.out.tab"),
    tabgz    =  f"{bam__mappingDir}/SJ.out.tab.gz",
    rawFile  = pipeman.temp(f"{bam__mappingDir}/Aligned.sortedByCoord.out.bam"),
    outFiles = [ 
      f"{bam__mappingDir}{ext}"
      for ext in [ 
        "/Log.out", "/Log.progress.out", "/Log.final.out",
      ]],
    log      = f"{bam__samplePrefix}.log"
  run:
    star   = pipeman.config.pipeline.modules.mapping.aligner
    prefix = bam__mappingDir.format(**wildcards) + os.path.sep
    reads  = star__readsToString(input.r1, input.r2)
    gnmIdx = genome__index()
    cmd = """
     {star.command}                                         \
       --runThreadN {star.cores}                            \
       --genomeDir {gnmIdx}                                 \
       --readFilesIn {reads}                                \
       --outSAMstrandField intronMotif                      \
       --outFileNamePrefix {prefix}                         \
       --outSAMtype BAM SortedByCoordinate                  \
       --outSAMunmapped Within                              \
       --outFilterMismatchNmax {star.outFilterMismatchNmax} \
       --readFilesCommand zcat                              \
      > {output.log}
  
     ln {output.rawFile} {output.bam}
     gzip -c {output.tab} > {output.tabgz}
    """
    exshell(**vars())

ruleorder: samples__runs > bam_star__alignReads 
