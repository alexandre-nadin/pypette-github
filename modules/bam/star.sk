include: "star.py"

rule bam_star__alignReads:
  input: 
    configs = config__files,
    reads_1 = lambda wildcards: pipeman.samples.map(
                fastq__read, sample_read="R1", **wildcards),
    reads_2 = lambda wildcards: pipeman.samples.map(
                fastq__read, sample_read="R2", **wildcards)
  output:
    bam       = temp(bam__sample),
    raw_file  = temp(f"{bam__mappingDir}/Aligned.sortedByCoord.out.bam"),
    out_files = [ 
      protected(bam__mappingDir + ext)
      for ext in [ 
        "/Log.out", "/Log.progress.out", "/Log.final.out", "/SJ.out.tab" 
      ]],
    log       = f"{bam__samplePrefix}.log"
  run:
    star   = pipeman.config.pipeline.modules.mapping.aligner
    prefix = bam__mappingDir.format(**wildcards) + os.path.sep
    reads  = star__readsToString(input.reads_1, input.reads_2)
    starGnmIdx = genome__index()
    cmd = """
     {star.command}                                         \
       --runThreadN {star.cores}                            \
       --genomeDir {starGnmIdx}                             \
       --readFilesIn {reads}                                \
       --outSAMstrandField intronMotif                      \
       --outFileNamePrefix {prefix}                         \
       --outSAMtype BAM SortedByCoordinate                  \
       --outSAMunmapped Within                              \
       --outFilterMismatchNmax {star.outFilterMismatchNmax} \
       --readFilesCommand zcat                              \
      > {output.log}
  
     ln {output.raw_file} {output.bam}
    """
    exshell(**vars())

ruleorder: samples__runs > bam_star__alignReads 
