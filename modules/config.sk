import os
import sys 
import subprocess
#sys.path.insert(0, CTGB_PIPE_DIR + "/python-lib") # TODO: make python package and install from conda/pip
sys.path.insert(0, "../../../local/ctgb-pipe/pythonlibs") # TODO: make python package and install from conda/pip.
import fastq_helper
import csv_helper

def lshell(command, allow_empty_lines=False):
    #
    # Returns the output of a given shell command in an array.
    # Each element is an output line.
    # Filters empty strings by default.
    #
    out = subprocess.check_output(command, shell=True).decode().split(os.linesep)
    return out if allow_empty_lines else [ _elem for _elem in out if _elem ] 

def csvmap__format_str_from_query_dict(csvmap, str_format="", **query_dict):
    #
    # Queries a CSVMap object based on a given dictionary.
    #
    return set([ str_format.format(**_cmap)
                 for _cmap in csvmap.query_dict(**query_dict)
               ])

PBS_DIR = 'pbs'
PAIRED = 'Y'

bam__chunk_format="{sample_run}/{sample_name}/{sample_name}_{sample_number}_{sample_lane}_{sample_chunknb}{preprocesses}"
bam__merged_format="BAM/{sample_name}{preprocesses}"



# -----------------------------
# Import all available modules
# -----------------------------
# Includes all available modules that are not Snakemake configuration files
#
import glob
snakemake_modules = [ _sk for _sk in glob.glob(CTGB_PIPE_DIR + "/rules/mapping/*.sk")
                        if not _sk.endswith('_config.sk')
                    ]
for _sk_module in snakemake_modules:
    include: _sk_module
